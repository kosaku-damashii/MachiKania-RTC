REM RTC.BAS
REM RTC-4543SA

USECLASS RTC
R=NEW(RTC)


R.INIT()

R.SEC=00
R.MIN=06
R.HOUR=21
R.DAY=16
R.MONTH=2
R.YEAR=20

R.DATE=R.SETDTE()

R.WRRTC()

WAIT 60

WHILE 1
  R.RDRTC()
  PRINT DEC$(R.YEAR)+" "+DEC$(R.MONTH)+"/"+DEC$(R.DAY)+" "+DEC$(R.HOUR)+":"+DEC$(R.MIN)+":"+DEC$(R.SEC)+" "+DEC$(R.DATE)
  WAIT 60
WEND

END


REM === CLASS "RTC" ===
OPTION CLASSCODE

FIELD PUBLIC SEC,MIN,HOUR,DATE,DAY,MONTH,YEAR

METHOD WAITu
  USETIMER ARGS(1)
  WHILE TIMER() > 0
  WEND
RETURN

METHOD SETDTE
  VAR Y,M
  IF ((MONTH = 1) OR (MONTH = 2)) THEN
    Y=(YEAR+2000)-1
    M=MONTH+12
  ENDIF
RETURN (Y+Y/4-Y/100+Y/400+(13*M+8)/5+DAY)%7+1

METHOD RTCIDL
  OUT 17,0    REM E6  CE
  OUT 14,0    REM B14 WR
  OUT 15,0    REM B15 CLK
  OUT 16,0    REM E5  DATA
RETURN

METHOD RTCWRM
  OUT 14,1    REM B14 WR
  OUT 17,1    REM E6  CE
RETURN

METHOD RTCRDM
  OUT 14,0    REM B14 WR
  OUT 17,1    REM E6  CE
RETURN

METHOD CLK
  OUT 15,1    REM B15 CLK
  CALL RTC::WAITu(500)
  OUT 15,0    REM B15 CLK
  CALL RTC::WAITu(500)
RETURN

METHOD SETBIT
  IF (ARGS(1) AND 1) = 1 THEN
    OUT 16,1   REM E5  DATA
  ELSE
    OUT 16,0   REM E5  DATA
  ENDIF
  CALL RTC::CLK()
RETURN

METHOD RDBIT
  CALL RTC::CLK()
RETURN IN(16) AND 1 

METHOD SETDAT
  VAR A,B,I
  A=ARGS(1)
  B=ARGS(2)
  FOR I=0 TO B-1
    CALL RTC::SETBIT(A AND 1)
    A=A >> 1
  NEXT
  WAIT 1
RETURN

METHOD RDDAT
  VAR A,B,T,I
  A=ARGS(1)
  B=0
  T=0
  FOR I=0 TO A-1
    T=GOSUB(RDBIT)
    T=T << I
    B=B+T
  NEXT
RETURN B

METHOD INIT
  SEC=0
  MIN=0
  HOUR=0
  DATE=0
  DAY=0
  MONTH=0
  YEAR=0
RETURN

METHOD WRRTC
  CALL RTC::RTCWRM()

  CALL RTC::SETDAT(SEC % 10,4)
  CALL RTC::SETDAT(SEC / 10,3)
  CALL RTC::SETDAT(0,1)   REM FDT bit(always set 0)

  CALL RTC::SETDAT(MIN % 10,4)
  CALL RTC::SETDAT(MIN / 10,3)
  CALL RTC::SETDAT(0,1)   REM user bit(0)

  CALL RTC::SETDAT(HOUR % 10,4)
  CALL RTC::SETDAT(HOUR / 10,2)
  CALL RTC::SETDAT(0,2)   REM user bit(0)

  CALL RTC::SETDAT(DATE,3)
  CALL RTC::SETDAT(0,1)   REM user bit(0)

  CALL RTC::SETDAT(DAY % 10,4)
  CALL RTC::SETDAT(DAY / 10,2)
  CALL RTC::SETDAT(0,2)   REM user bit(0)

  CALL RTC::SETDAT(MONTH % 10,4)
  CALL RTC::SETDAT(MONTH / 10,1)
  CALL RTC::SETDAT(0,2)   REM user bit(0)
  CALL RTC::SETDAT(0,1)   REM TM bit(always set 0)

  CALL RTC::SETDAT(YEAR % 10,4)
  CALL RTC::SETDAT(YEAR / 10,4)

  CALL RTC::RTCIDL()
RETURN

METHOD RDRTC
  VAR A,B

  CALL RTC::RTCRDM()

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(3)
  SEC=A + (B * 10)
  A=RTC::RDDAT(1)   REM FDT bit

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(3)
  MIN=A + (B * 10)
  A=RTC::RDDAT(1)   REM user bit

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(2)
  HOUR=A + (B * 10)
  A=RTC::RDDAT(2)   REM user bit

  DATE=RTC::RDDAT(3)
  A=RTC::RDDAT(1)   REM user bit

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(2)
  DAY=A + (B * 10)
  A=RTC::RDDAT(2)   REM user bit

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(1)
  MONTH=A + (B * 10)
  A=RTC::RDDAT(2)   REM user bit
  A=RTC::RDDAT(1)   REM TM bit

  A=RTC::RDDAT(4)
  B=RTC::RDDAT(4)
  YEAR=A + (B * 10)

  CALL RTC::RTCIDL()
RETURN
